package ru.atconsulting.bigdata.homejob.staging.stage_3;

import junit.framework.Assert;
import org.junit.Test;
import ru.atconsulting.bigdata.homejob.staging.stage_3_group_ctn.pair.TopHolder;

/**
 * Created by NSkovpin on 18.04.2017.
 */
public class TopHolderTest {

    @Test
    public void topHolderTest(){
        TopHolder homeHolder = new TopHolder(false, true);
        homeHolder.addToTop(33L, new String[]{"111","222","","","","","","","","","","","","","","","","","", "","","","","","","","","","","","","","","","","","","", ""} , 0L, 0L);
        homeHolder.addToTop(44L, new String[]{"111","322","","","","","","","","","","","","","","","","","", "","","","","","","","","","","","","","","","","","","", ""}  , 0L, 0L);
        homeHolder.addToTop(44L, new String[]{"111","422","","","","","","","","","","","","","","","","","", "","","","","","","","","","","","","","","","","","","", ""}  , 0L, 0L);
        homeHolder.addToTop(44L, new String[]{"111","122","","","","","","","","","","","","","","","","","", "","","","","","","","","","","","","","","","","","","", ""}  , 0L, 0L);
        homeHolder.addToTop(46L, new String[]{"322","111","","","","","","","","","","","","","","","","","", "","","","","","","","","","","","","","","","","","","", ""}  , 0L, 0L);
        homeHolder.addToTop(45L, new String[]{"","","","","","","","","","","","","","","","","","","", "","","","","","","","","","","","","","","","","","","", ""}  , 0L, 0L);
        homeHolder.addToTop(12L,new String[]{"","","","","","","","","","","","","","","","","","","", "","","","","","","","","","","","","","","","","","","", ""}  , 0L, 0L);
        Assert.assertTrue(homeHolder.getTop1().getKey() == 46L);
        Assert.assertTrue(homeHolder.getTop2().getKey() == 45L);
    }

    @Test
    public void topHolderTest2(){
        TopHolder homeHolder = new TopHolder(true, false);
        homeHolder.addToTop(33L, new String[]{"","","","","","","","","","","","","","","","","","","", "","","","","","","","","","","","","","","","","","","", ""} , 0L, 0L);
        homeHolder.addToTop(44L, new String[]{"","","","","","","","","","","","","","","","","","","", "","","","","","","","","","","","","","","","","","","", ""}  , 0L, 0L);
        homeHolder.addToTop(46L, new String[]{"","","","","","","","","","","","","","","","","","","", "","","","","","","","","","","","","","","","","","","", ""}  , 0L, 0L);
        homeHolder.addToTop(45L, new String[]{"","","","","","","","","","","","","","","","","","","", "","","","","","","","","","","","","","","","","","","", ""}  , 0L, 0L);
        homeHolder.addToTop(12L,new String[]{"","","","","","","","","","","","","","","","","","","", "","","","","","","","","","","","","","","","","","","", ""}  , 0L, 0L);
        Assert.assertTrue(homeHolder.getTop1().getKey() == 46L);
        Assert.assertTrue(homeHolder.getTop2() == null);
        Assert.assertTrue(homeHolder.getTop1Value(1).length() > 0);
        Assert.assertTrue(homeHolder.getTop1Value(2).length() > 0);
    }


    @Test
    public void topHolderTest3(){
        TopHolder homeHolder = new TopHolder(false, true);
        homeHolder.addToTop(33L, new String[]{"111","222","2","","","","","","","","","","","","","","","","", "","","","","","","","","","","","","","","","","","","", ""} , 0L, 0L);
        homeHolder.addToTop(44L, new String[]{"111","322","2","","","","","","","","","","","","","","","","", "","","","","","","","","","","","","","","","","","","", ""}  , 0L, 0L);
        homeHolder.addToTop(44L, new String[]{"111","422","2","","","","","","","","","","","","","","","","", "","","","","","","","","","","","","","","","","","","", ""}  , 0L, 0L);
        homeHolder.addToTop(44L, new String[]{"111","422","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","1#1,1#2,1#3","", "","","","","","","","","","","","","","","","","","","", ""}  , 0L, 0L);
        homeHolder.addToTop(44L, new String[]{"111","323","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","1#5,1#6","", "","","","","","","","","","","","","","","","","","","", ""}  , 0L, 0L);
        homeHolder.addToTop(44L, new String[]{"111","522","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","1#5,1#1","", "","","","","","","","","","","","","","","","","","","", ""}  , 0L, 0L);
        homeHolder.addToTop(46L, new String[]{"322","111","2","","","","","","","","","","","","","","","","", "","","","","","","","","","","","","","","","","","","", ""}  , 0L, 0L);
        homeHolder.addToTop(45L, new String[]{"","","","","","","","","","","","","","","","","","","", "","","","","","","","","","","","","","","","","","","", ""}  , 0L, 0L);
        homeHolder.addToTop(45L, new String[]{"111","122","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","1#5,1#1","", "","","","","","","","","","","","","","","","","","","", ""}  , 0L, 0L);
        homeHolder.addToTop(12L,new String[]{"","","","","","","","","","","","","","","","","","","", "","","","","","","","","","","","","","","","","","","", ""}  , 0L, 0L);
        Assert.assertTrue(homeHolder.getTop1().getKey() == 46L);
        Assert.assertTrue(homeHolder.getTop2().getKey() == 45L);
    }


}
